#!/bin/bash
set -e

BASE_DIR=$(cd $(dirname $0)/../..; pwd)
CONFIG_DIR=${BASE_DIR}/config

decode() {
    printf "`printf "%s\n" "$1" | sed -e 's/+/ /g' -e 's/%\(..\)/\\\\x\1/g'`"
}

parseurl() {
    url="$1"
    prefix="$2"

    if [ -z "${url}" ]; then
        return
    fi

    proxy_proto="`echo ${url} | grep '://' | cut -d: -f1`"
    proxy_url="`echo ${url} | grep '://' | cut -d/ -f3`"
    proxy_userpass="`echo ${proxy_url} | grep @ | cut -d@ -f1`"
    proxy_pass="`echo ${proxy_userpass} | grep : | cut -d: -f2`"
    if [ -n "${proxy_pass}" ]; then
        proxy_user="`echo ${proxy_userpass} | grep : | cut -d: -f1`"
    else
        proxy_user=${proxy_userpass}
    fi
    proxy_hostport="`echo ${proxy_url} | sed -e s,${proxy_userpass}@,,g | cut -d/ -f1`"
    proxy_port="`echo ${proxy_hostport} | grep : | cut -d: -f2`"
    if [ -n "${proxy_port}" ]; then
        proxy_host="`echo ${proxy_hostport} | grep : | cut -d: -f1`"
    else
        proxy_host=${proxy_hostport}
        proxy_port=80
    fi

    echo "${prefix}_proxy=${url}"
    echo "${prefix}_proxy_proto=${proxy_proto}"
    echo "${prefix}_proxy_userpass=${proxy_userpass}"
    echo "${prefix}_proxy_user=`decode ${proxy_user}`"
    echo "${prefix}_proxy_pass=`decode ${proxy_pass}`"
    echo "${prefix}_proxy_host=${proxy_host}"
    echo "${prefix}_proxy_port=${proxy_port}"
}

add_no_proxy() {
if [ -f ${CONFIG_DIR}/$1 ]; then
    for i in $(grep -vh -e '^\s' -e '^\#' -e '^\s*$' ${CONFIG_DIR}/$1 | sed -e 's/://'); do
        default_no_proxy="${default_no_proxy},$i"
    done
fi
}

parseurl "${http_proxy}" http
parseurl "${https_proxy}" https
parseurl "${ftp_proxy}" ftp

if [ -z "${http_proxy}" ]; then
    exit
fi


default_no_proxy=127.0.0.1,localhost
add_no_proxy backend-services.yml
add_no_proxy core-services.yml

if [ -d ${CONFIG_DIR}/nginx/ ]; then
    if [ `ls ${CONFIG_DIR}/nginx/ |wc -l` -gt 0 ]; then
        for i in $(grep -lE "proxy_pass\s+http://" ${CONFIG_DIR}/nginx/*); do
            CONTAINER_NAME=`basename ${i%.conf}`
            default_no_proxy="${default_no_proxy},${CONTAINER_NAME}.${POCCI_DOMAIN_NAME}"
        done
    fi
fi

if [ -n "${no_proxy}" ]; then
    echo "no_proxy=${no_proxy},${default_no_proxy}"
else
    echo "no_proxy=${default_no_proxy}"
fi

