
source ${LIB_DIR}/export-env ${CONFIG_DIR}/.env

if [ -d ${CONFIG_DIR}/volumes ]; then
    rm -fr ${CONFIG_DIR}/volumes
fi
mkdir ${CONFIG_DIR}/volumes

if [ -d ${CONFIG_DIR}/nginx ]; then
    rm -fr ${CONFIG_DIR}/nginx
fi
mkdir ${CONFIG_DIR}/nginx

for i in $(find ${TEMP_CONFIG_DIR}/services/backend/ -name create-config.sh); do
    source $i
done

DEFAULT_SERVER="default_server"
POCCI_PUBLIC_CONTAINERS=""
for i in ${INTERNAL_SERVICES}; do
    if [ -d ${TEMP_CONFIG_DIR}/services/core/$i ]; then
        cd ${TEMP_CONFIG_DIR}/services/core/$i
        if [ -f ./create-config.sh ]; then
            source ./create-config.sh
        fi

        cd ${TEMP_CONFIG_DIR}/services/core/$i
        if [ -d ./volumes ]; then
            cp -r ./volumes ${CONFIG_DIR}/volumes/$i
        fi
        if [ -f ./nginx.conf.template ]; then
            source ./nginx.conf.template >${CONFIG_DIR}/nginx/$i.conf
            DEFAULT_SERVER=""
            if [ "${POCCI_PUBLIC_CONTAINERS}" != "" ]; then
                POCCI_PUBLIC_CONTAINERS="${POCCI_PUBLIC_CONTAINERS},"
            fi
            POCCI_PUBLIC_CONTAINERS="${POCCI_PUBLIC_CONTAINERS} $i"
        fi
    fi
done
echo "POCCI_PUBLIC_CONTAINERS=${POCCI_PUBLIC_CONTAINERS}" >>${CONFIG_DIR}/.env

if [ -n "${INTERNAL_SERVICES}" ]; then
    cd ${TEMP_CONFIG_DIR}/services/core/nginx
    source ./create-config.sh
fi

source ${LIB_DIR}/update-dns-entries
${LIB_DIR}/create-proxy-env >>${CONFIG_DIR}/.env
