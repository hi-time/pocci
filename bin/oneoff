#!/bin/bash
set -e

BASE_DIR=$(cd $(dirname $0)/..; pwd)
source ${BASE_DIR}/bin/lib/init-env

if [ -z "${POCCIR_OPTS}" ]; then
    if [ -f "${CONFIG_DIR}/.env" ]; then
        POCCIR_OPTS="--env-file ${CONFIG_DIR}/.env"
        export `grep DNS_ADDRESS ${CONFIG_DIR}/.env`
        if [ `docker ps |grep "${DNS_CONTAINER}" |wc -l` -ne 0 ]; then
            POCCIR_OPTS="${POCCIR_OPTS} --dns ${DNS_ADDRESS}"
        fi
    fi
fi

if [ -n "${POCCIR_OPTS_ADD}" ]; then
    POCCIR_OPTS="${POCCIR_OPTS} ${POCCIR_OPTS_ADD}"
fi

if [ $# -lt 2 ]; then
    echo "Usage: $0 <container type> <command> [arg...]"
    echo ''
    exit 1
fi

if [ -t 0 ];then
    TTY_OPTION="-it"
else
    TTY_OPTION=" "
fi

CONTAINER_TYPE="$1"
shift
CONTAINER_NAME_STEM=`echo ${CONTAINER_TYPE} |sed -e 's/[\/|:]/_/g'`
CONTAINER_NAME=poccir_${CONTAINER_NAME_STEM}
if [ "${CONTAINER_TYPE}" = "${CONTAINER_NAME_STEM}" ]; then
    IMAGE=`docker images |awk '{printf "%s:%s\n",$1,$2}'| grep ${CONTAINER_TYPE} |head -1`
    if [ -z "${IMAGE}" ]; then
        IMAGE=${CONTAINER_TYPE}
    fi
else
    IMAGE=${CONTAINER_TYPE}
fi

if [ -d "${CONFIG_DIR}/.ssh" ]; then
    MOUNT_SSH_DIR="-v ${CONFIG_DIR}/.ssh:/tmp/user_home/.ssh"
fi

set +e
docker run --name ${CONTAINER_NAME} --privileged -w /app \
    -v ${PWD}:/app ${POCCIR_OPTS} \
    -v /dev/urandom:/dev/random ${MOUNT_SSH_DIR} \
    --rm ${TTY_OPTION} ${IMAGE} "$@"
RC=$?

set -e
if [ `docker ps -a |grep ${CONTAINER_NAME} |wc -l` -gt 0 ]; then
    docker rm -v ${CONTAINER_NAME}
fi

exit ${RC}
