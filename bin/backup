#!/bin/bash
set -e

BASE_DIR=$(cd $(dirname $0)/..; pwd)
source ${BASE_DIR}/bin/lib/init-env
BACKUP_DIR=${BASE_DIR}/backup/$(date +%Y%m%d-%H%M)

${LIB_DIR}/save-config "Backup: ${BACKUP_DIR}"
git clone ${CONFIG_DIR}/.git ${BACKUP_DIR}/config

${BIN_DIR}/stop-service

mkdir -p ${BACKUP_DIR}

RESTORE_ALL_SCRIPT=${BACKUP_DIR}/restore-all.sh
echo '#!/bin/bash' >${RESTORE_ALL_SCRIPT}
echo 'set -e' >>${RESTORE_ALL_SCRIPT}
echo 'cd $(dirname $0)' >>${RESTORE_ALL_SCRIPT}

CONTAINERS=`docker ps -a |grep 'pocci[s|n]_' |sed -e 's/.*pocci/pocci/'`
for i in ${CONTAINERS}; do
    VOLUMES=`docker inspect --format='{{range $key, $value := .Volumes}}{{printf "%s:%s\n" $key $value }}{{end}}' $i |grep -E '/_data$' |sed -e 's/:.*$//' |tr '\n' ' '`
    if [ -z "${VOLUMES}" ]; then
        echo "skip backup : $i"
    else
        echo "backup : $i:${VOLUMES}"
        docker run --name poccir_backup --volumes-from $i -v ${BACKUP_DIR}:/backup --rm xpfriend/jenkins-slave-base:${VERSION_JENKINS_SLAVE_BASE} sudo tar cfz /backup/$i.tar.gz ${VOLUMES}
        RESTORE_SCRIPT=${BACKUP_DIR}/restore-$i.sh
        RESTORE_COMMAND='docker run --name poccir_restore --volumes-from '$i' -v ${BACKUP_DIR}:/backup --rm xpfriend/jenkins-slave-base:'${VERSION_JENKINS_SLAVE_BASE}' sudo bash -c "cd /;find '${VOLUMES}' -mindepth 1 -delete;tar xfz /backup/'$i'.tar.gz"'
        echo '#!/bin/bash' >${RESTORE_SCRIPT}
        echo 'set -ex' >>${RESTORE_SCRIPT}
        echo 'BACKUP_DIR=$(cd $(dirname $0); pwd)' >>${RESTORE_SCRIPT}
        echo ${RESTORE_COMMAND} >>${RESTORE_SCRIPT}
        chmod +x ${RESTORE_SCRIPT}
        echo "./restore-$i.sh" >>${RESTORE_ALL_SCRIPT}
    fi
done

chmod +x ${RESTORE_ALL_SCRIPT}

${BIN_DIR}/up-service
