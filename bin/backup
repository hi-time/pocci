#!/bin/bash
set -e

BASE_DIR=$(cd $(dirname $0)/..; pwd)
source ${BASE_DIR}/bin/lib/init-env
BACKUP_DIR=${BASE_DIR}/backup/$(date +%Y%m%d-%H%M)

${LIB_DIR}/save-config "Backup: ${BACKUP_DIR}"
git clone ${CONFIG_DIR}/.git ${BACKUP_DIR}/config

mkdir -p ${BACKUP_DIR}

RESTORE_ALL_SCRIPT=${BACKUP_DIR}/restore-all.sh
echo '#!/bin/bash' >${RESTORE_ALL_SCRIPT}
echo 'set -e' >>${RESTORE_ALL_SCRIPT}
echo 'cd $(dirname $0)' >>${RESTORE_ALL_SCRIPT}

CONTAINERS=`docker ps -a |grep 'pocci[s|n]_' |sed -e 's/.*pocci/pocci/'`
FORMAT=""
for i in ${CONTAINERS}; do
    if [ -z "${FORMAT}" ]; then
        if [ `docker inspect $i |grep \"Mounts\": |wc -l` -eq 0 ]; then
            FORMAT='{{range $key, $value := .Volumes}}{{printf "%s:%s\n" $key $value }}{{end}}'
        else
            FORMAT='{{range $value := .Mounts}}{{printf "%s:%s\n" $value.Destination $value.Source }}{{end}}'
        fi
    fi

    VOLUMES=`docker inspect --format="${FORMAT}" $i |grep -E '/_data$' |tr '\n' ' '`
    if [ -z "${VOLUMES}" ]; then
        echo "skip backup : $i"
    else
        if [ -d /tmp/$i ]; then
            sudo rm -fr /tmp/$i
        fi
        TARGET_DIRS=""
        for j in ${VOLUMES}; do
            SOURCE_DIR=`echo "$j" |cut -f2 -d :`
            TARGET_DIR=`echo "$j" |cut -f1 -d :`
            TARGET_DIRS="${TARGET_DIRS} ${TARGET_DIR}"
            echo "backup : $i:${TARGET_DIR}"
            if [ -f ${BACKUP_DIR}/$i.tar ]; then
                sudo sh -c "cd ${SOURCE_DIR};tar rf ${BACKUP_DIR}/$i.tar --transform='s,^\./,${TARGET_DIR}/,g' ."
            else
                sudo sh -c "cd ${SOURCE_DIR};tar cf ${BACKUP_DIR}/$i.tar --transform='s,^\./,${TARGET_DIR}/,g' ."
            fi
        done
        sudo rm -fr /tmp/$i
        sudo chown `whoami`:`groups` ${BACKUP_DIR}/$i.tar

        RESTORE_SCRIPT=${BACKUP_DIR}/restore-$i.sh
        RESTORE_COMMAND='docker run --name poccir_restore --volumes-from '$i' -v ${BACKUP_DIR}:/backup --rm xpfriend/jenkins-slave-base:'${VERSION_JENKINS_SLAVE_BASE}' sudo bash -c "cd /;find '${TARGET_DIRS}' -mindepth 1 -delete;tar xf /backup/'$i'.tar"'
        echo '#!/bin/bash' >${RESTORE_SCRIPT}
        echo 'set -ex' >>${RESTORE_SCRIPT}
        echo 'BACKUP_DIR=$(cd $(dirname $0); pwd)' >>${RESTORE_SCRIPT}
        echo ${RESTORE_COMMAND} >>${RESTORE_SCRIPT}
        chmod +x ${RESTORE_SCRIPT}
        echo "./restore-$i.sh" >>${RESTORE_ALL_SCRIPT}
    fi
done

chmod +x ${RESTORE_ALL_SCRIPT}
